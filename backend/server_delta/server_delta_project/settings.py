"""
Django settings for server_delta_project project.

Generated by 'django-admin startproject' using Django 1.11.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os, dj_database_url


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'khm-&hdg9#o1m7vq!)k7x4h#zomakclc9l6j^^pufbp^3if@yb'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
CORS_ORIGIN_ALLOW_ALL = True

AUTH_USER_MODEL = 'server_delta_app.UserModel'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',


    'oauth2_provider',
    'corsheaders',
    'rest_framework',
    'rest_framework_swagger',
    'django_filters',
    'storages',


    'server_delta_app.apps.ServerAlphaConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    # 'django.middleware.locale.LocaleMiddleware'
]

OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {'read': 'Read scope', 'write': 'Write scope', 'groups': 'Access to your groups'}
}

API_NAME = 'Server Alpha Api'

ROOT_URLCONF = 'server_delta_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
    ],
    'EXCEPTION_HANDLER': 'server_delta_app.exceptions.custom_exception_handler'

}


WSGI_APPLICATION = 'server_delta_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
local_db = 'postgres://postgres:postgres@localhost:5432/delta_db'   
DATABASES = {
    'default': dj_database_url.config('DATABASE_URL', default=local_db)
}
# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

# LANGUAGES = [
#     ('pt_BR', _('Portguese')),
#     ('en', _('English')),
# ]

TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

MEDIA_ROOT_DIR = 'media'
MEDIA_ROOT = os.path.join(BASE_DIR, MEDIA_ROOT_DIR)
MEDIA_URL = '/media/'
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")

DEFAULT_FILE_STORAGE = os.environ.get('DEFAULT_FILE_STORAGE', 'django.core.files.storage.FileSystemStorage')
STATICFILES_STORAGE = os.environ.get('STATICFILES_STORAGE', 'django.contrib.staticfiles.storage.StaticFilesStorage')

SERVER_ALPHA_URL = 'http://127.0.0.1:8001'
SERVER_ALPHA_USERNAME = 'delta'
SERVER_ALPHA_PASSWORD = '82fxhf27'
SERVER_ALPHA_CLIENT_SECRET = 'syWIkPyn5WTnsG0gkxHvlewFhnzTDKHnPwnqm5I9vvhkQWyWowH71NDPylrLEpCNMekBsLaa4fIVNNnQHK9LsTm1q12SVA45xqfLXVfjMj2UZmPKju7jTiF4mtUKi00G'
SERVER_ALPHA_RESOURCE_OWNER_ID = 'aSiMfeJjMvezSyFE7qG2G7pHg95psw3uSkndXhFw'
SERVER_ALPHA_RESOURCE_OWNER_SECRET = '6E2glB86Zbpn64EOsLYkJwbQQUYfLKXTHjjgVcQ5LtWXlJR538pIZs8egxVBz5f9rWax7M1Ja60x6cYfz73f3rh27n4mB6Sr1TyGF3oZVdUbfepVPlVy8tiNoAukPMpo'

SERVER_BETA_URL = 'http://127.0.0.1:8002'
SERVER_BETA_USERNAME = 'delta'
SERVER_BETA_PASSWORD = '82fxhf27'
SERVER_BETA_CLIENT_ID = '6nBxcNVLsl4NxsejVf0ScNYmsDQRY3SWLvvYDQCJ'
SERVER_BETA_CLIENT_SECRET = 'slbqxEie2oBG3MDtFzYZDwGKv8zSuzUmEexKtuQlbEqOhb6YTqI8oMQQXvqiOwUJXo9RYrLFQkZg97D6kHMxPBV5ChGFljpzh5sblqxkFVxQooBEI71VTS7G6e1Lvch2'
SERVER_BETA_RESOURCE_OWNER_ID = 'bApv4CeLtB1ln25vWvcZp3l9bM35qa8k6IVDu83K'
SERVER_BETA_RESOURCE_OWNER_SECRET = 'eYK9GLBiOl9nRILtH7vur9AAgkNHL51EInqVhvwB5JpCMZBFsxkr5qJ0dVCgEVgcCXjS4pTsnX16USJjWqduSUzufCXJnodjuXk7Xz2YmUkvJa5Xpv3tSMH27uI1v5gc'

SERVER_CAPA_URL = 'http://127.0.0.1:8003'